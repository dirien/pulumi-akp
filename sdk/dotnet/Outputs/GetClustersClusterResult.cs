// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Akp.Outputs
{

    [OutputType]
    public sealed class GetClustersClusterResult
    {
        /// <summary>
        /// Annotations
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// Cluster ID
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Argo CD instance ID
        /// </summary>
        public readonly string InstanceId;
        public readonly Outputs.GetClustersClusterKubeConfigResult KubeConfig;
        /// <summary>
        /// Labels
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Cluster name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Agent installation namespace
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// Remove agent Kubernetes resources from the managed cluster when destroying cluster
        /// </summary>
        public readonly bool RemoveAgentResourcesOnDestroy;
        /// <summary>
        /// Cluster spec
        /// </summary>
        public readonly Outputs.GetClustersClusterSpecResult Spec;

        [OutputConstructor]
        private GetClustersClusterResult(
            ImmutableDictionary<string, string> annotations,

            string id,

            string instanceId,

            Outputs.GetClustersClusterKubeConfigResult kubeConfig,

            ImmutableDictionary<string, string> labels,

            string name,

            string @namespace,

            bool removeAgentResourcesOnDestroy,

            Outputs.GetClustersClusterSpecResult spec)
        {
            Annotations = annotations;
            Id = id;
            InstanceId = instanceId;
            KubeConfig = kubeConfig;
            Labels = labels;
            Name = name;
            Namespace = @namespace;
            RemoveAgentResourcesOnDestroy = removeAgentResourcesOnDestroy;
            Spec = spec;
        }
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Akp.Inputs
{

    public sealed class InstanceConfigManagementPluginsSpecParametersStaticArgs : global::Pulumi.ResourceArgs
    {
        [Input("arrays")]
        private InputList<string>? _arrays;

        /// <summary>
        /// This field communicates the parameter's default value to the UI if the parameter is an `array`.
        /// </summary>
        public InputList<string> Arrays
        {
            get => _arrays ?? (_arrays = new InputList<string>());
            set => _arrays = value;
        }

        /// <summary>
        /// Collection Type describes what type of value this parameter accepts (string, array, or map) and allows the UI to present a form to match that type. Default is `string`. This field must be present for non-string types. It will not be inferred from the presence of an `array` or `map` field.
        /// </summary>
        [Input("collectionType")]
        public Input<string>? CollectionType { get; set; }

        /// <summary>
        /// Item type tells the UI how to present the parameter's value (or, for arrays and maps, values). Default is `string`. Examples of other types which may be supported in the future are `boolean` or `number`. Even if the itemType is not `string`, the parameter value from the Application spec will be sent to the plugin as a string. It's up to the plugin to do the appropriate conversion.
        /// </summary>
        [Input("itemType")]
        public Input<string>? ItemType { get; set; }

        [Input("map")]
        private InputMap<string>? _map;

        /// <summary>
        /// This field communicates the parameter's default value to the UI if the parameter is a `map`.
        /// </summary>
        public InputMap<string> Map
        {
            get => _map ?? (_map = new InputMap<string>());
            set => _map = value;
        }

        /// <summary>
        /// Parameter name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the Parameter is required or not. If this field is set to true, the UI will indicate to the user that they must set the value. Default to false.
        /// </summary>
        [Input("required")]
        public Input<bool>? Required { get; set; }

        /// <summary>
        /// This field communicates the parameter's default value to the UI if the parameter is a `string`.
        /// </summary>
        [Input("string")]
        public Input<string>? String { get; set; }

        /// <summary>
        /// Title and description of the parameter
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// Tooltip of the Parameter, will be shown when hovering over the title
        /// </summary>
        [Input("tooltip")]
        public Input<string>? Tooltip { get; set; }

        public InstanceConfigManagementPluginsSpecParametersStaticArgs()
        {
        }
        public static new InstanceConfigManagementPluginsSpecParametersStaticArgs Empty => new InstanceConfigManagementPluginsSpecParametersStaticArgs();
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Akp.Inputs
{

    public sealed class ClusterSpecDataGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables Argo CD state replication to the managed cluster that allows disconnecting the cluster from Akuity Platform without losing core Argocd features
        /// </summary>
        [Input("appReplication")]
        public Input<bool>? AppReplication { get; set; }

        [Input("autoUpgradeDisabled")]
        public Input<bool>? AutoUpgradeDisabled { get; set; }

        /// <summary>
        /// Enable Datadog metrics collection of Application Controller and Repo Server. Make sure that you install Datadog agent in cluster.
        /// </summary>
        [Input("datadogAnnotationsEnabled")]
        public Input<bool>? DatadogAnnotationsEnabled { get; set; }

        /// <summary>
        /// Enable this if you are installing this cluster on EKS.
        /// </summary>
        [Input("eksAddonEnabled")]
        public Input<bool>? EksAddonEnabled { get; set; }

        /// <summary>
        /// Kustomize configuration that will be applied to generated agent installation manifests
        /// </summary>
        [Input("kustomization")]
        public Input<string>? Kustomization { get; set; }

        /// <summary>
        /// The config to access managed Kubernetes cluster. By default agent is using "in-cluster" config.
        /// </summary>
        [Input("managedClusterConfig")]
        public Input<Inputs.ClusterSpecDataManagedClusterConfigGetArgs>? ManagedClusterConfig { get; set; }

        /// <summary>
        /// Enables the ability to connect to Redis over a web-socket tunnel that allows using Akuity agent behind HTTPS proxy
        /// </summary>
        [Input("redisTunneling")]
        public Input<bool>? RedisTunneling { get; set; }

        /// <summary>
        /// Cluster Size. One of `small`, `medium` or `large`
        /// </summary>
        [Input("size", required: true)]
        public Input<string> Size { get; set; } = null!;

        /// <summary>
        /// The version of the agent to install on your cluster
        /// </summary>
        [Input("targetVersion")]
        public Input<string>? TargetVersion { get; set; }

        public ClusterSpecDataGetArgs()
        {
        }
        public static new ClusterSpecDataGetArgs Empty => new ClusterSpecDataGetArgs();
    }
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Akp.Inputs
{

    public sealed class InstanceConfigManagementPluginsSpecGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The discovery config is applied to a repository. If every configured discovery tool matches, then the plugin may be used to generate manifests for Applications using the repository. If the discovery config is omitted then the plugin will not match any application but can still be invoked explicitly by specifying the plugin name in the app spec. Only one of fileName, find.glob, or find.command should be specified. If multiple are specified then only the first (in that order) is evaluated.
        /// </summary>
        [Input("discover")]
        public Input<Inputs.InstanceConfigManagementPluginsSpecDiscoverGetArgs>? Discover { get; set; }

        /// <summary>
        /// The generate command runs in the Application source directory each time manifests are generated. Standard output must be ONLY valid Kubernetes Objects in either YAML or JSON. A non-zero exit code will fail manifest generation. Error output will be sent to the UI, so avoid printing sensitive information (such as secrets).
        /// </summary>
        [Input("generate", required: true)]
        public Input<Inputs.InstanceConfigManagementPluginsSpecGenerateGetArgs> Generate { get; set; } = null!;

        /// <summary>
        /// The init command runs in the Application source directory at the beginning of each manifest generation. The init command can output anything. A non-zero status code will fail manifest generation. Init always happens immediately before generate, but its output is not treated as manifests. This is a good place to, for example, download chart dependencies.
        /// </summary>
        [Input("init")]
        public Input<Inputs.InstanceConfigManagementPluginsSpecInitGetArgs>? Init { get; set; }

        /// <summary>
        /// The parameters config describes what parameters the UI should display for an Application. It is up to the user to actually set parameters in the Application manifest (in spec.source.plugin.parameters). The announcements only inform the "Parameters" tab in the App Details page of the UI.
        /// </summary>
        [Input("parameters")]
        public Input<Inputs.InstanceConfigManagementPluginsSpecParametersGetArgs>? Parameters { get; set; }

        /// <summary>
        /// Whether the plugin receives repository files with original file mode. Dangerous since the repository might have executable files. Set to true only if you trust the CMP plugin authors. Set to false by default.
        /// </summary>
        [Input("preserveFileMode")]
        public Input<bool>? PreserveFileMode { get; set; }

        /// <summary>
        /// Plugin version
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public InstanceConfigManagementPluginsSpecGetArgs()
        {
        }
        public static new InstanceConfigManagementPluginsSpecGetArgs Empty => new InstanceConfigManagementPluginsSpecGetArgs();
    }
}

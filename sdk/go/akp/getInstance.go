// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package akp

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-akp/sdk/go/akp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Gets information about an Argo CD instance by its name
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-akp/sdk/go/akp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := akp.LookupInstance(ctx, &akp.LookupInstanceArgs{
//				Name: "test",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("akp:index/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	ApplicationSetSecret          map[string]string                             `pulumi:"applicationSetSecret"`
	Argocd                        GetInstanceArgocd                             `pulumi:"argocd"`
	ArgocdCm                      map[string]string                             `pulumi:"argocdCm"`
	ArgocdImageUpdaterConfig      map[string]string                             `pulumi:"argocdImageUpdaterConfig"`
	ArgocdImageUpdaterSecret      map[string]string                             `pulumi:"argocdImageUpdaterSecret"`
	ArgocdImageUpdaterSshConfig   map[string]string                             `pulumi:"argocdImageUpdaterSshConfig"`
	ArgocdNotificationsCm         map[string]string                             `pulumi:"argocdNotificationsCm"`
	ArgocdNotificationsSecret     map[string]string                             `pulumi:"argocdNotificationsSecret"`
	ArgocdRbacCm                  map[string]string                             `pulumi:"argocdRbacCm"`
	ArgocdSecret                  map[string]string                             `pulumi:"argocdSecret"`
	ArgocdSshKnownHostsCm         map[string]string                             `pulumi:"argocdSshKnownHostsCm"`
	ArgocdTlsCertsCm              map[string]string                             `pulumi:"argocdTlsCertsCm"`
	ConfigManagementPlugins       map[string]GetInstanceConfigManagementPlugins `pulumi:"configManagementPlugins"`
	Id                            string                                        `pulumi:"id"`
	Name                          string                                        `pulumi:"name"`
	RepoCredentialSecrets         map[string]map[string]string                  `pulumi:"repoCredentialSecrets"`
	RepoTemplateCredentialSecrets map[string]map[string]string                  `pulumi:"repoTemplateCredentialSecrets"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInstanceResult, error) {
			args := v.(LookupInstanceArgs)
			r, err := LookupInstance(ctx, &args, opts...)
			var s LookupInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ApplicationSetSecret() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ApplicationSetSecret }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) Argocd() GetInstanceArgocdOutput {
	return o.ApplyT(func(v LookupInstanceResult) GetInstanceArgocd { return v.Argocd }).(GetInstanceArgocdOutput)
}

func (o LookupInstanceResultOutput) ArgocdCm() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdCm }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdImageUpdaterConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdImageUpdaterConfig }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdImageUpdaterSecret() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdImageUpdaterSecret }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdImageUpdaterSshConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdImageUpdaterSshConfig }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdNotificationsCm() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdNotificationsCm }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdNotificationsSecret() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdNotificationsSecret }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdRbacCm() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdRbacCm }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdSecret() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdSecret }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdSshKnownHostsCm() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdSshKnownHostsCm }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ArgocdTlsCertsCm() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]string { return v.ArgocdTlsCertsCm }).(pulumi.StringMapOutput)
}

func (o LookupInstanceResultOutput) ConfigManagementPlugins() GetInstanceConfigManagementPluginsMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]GetInstanceConfigManagementPlugins {
		return v.ConfigManagementPlugins
	}).(GetInstanceConfigManagementPluginsMapOutput)
}

func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) RepoCredentialSecrets() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]map[string]string { return v.RepoCredentialSecrets }).(pulumi.StringMapMapOutput)
}

func (o LookupInstanceResultOutput) RepoTemplateCredentialSecrets() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v LookupInstanceResult) map[string]map[string]string { return v.RepoTemplateCredentialSecrets }).(pulumi.StringMapMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
